
<p>I just released <a target="_blank" href="https://www.youtube.com/watch?v=RS2Iiql9nqo">a new video talking about the downsides to bloated software</a>.
It's not just about lines of code or dependencies, but about potentiality for breakage and frustration.
</p>

<p>
Nowadays, the standard modus operandi for many """devs""" is to write programs to substrate over previous ones.
Sounds sensible, but when everyone is doing it, we have nothing but an ever increasing mound of mutually-dependent programs for which even the most minor error can cause everything to come crashing down.
</p>

<p>In the video above, give a particular recent example in my life, involving writing a book in R Markdown (compiled with a LaTeX engine), comparing that to the less bloated <a target="_blank" href="https://www.youtube.com/playlist?list=PL-p5XmQHB_JRe2YeaMjPTKXSc5FqJZ_km">groff/troff</a>.</p>
