<div id="content">
 <p>
 <code>xii.tex</code> is a famous TeX puzzle by David Carlisle. The document source is
terribly obfuscated. The following document is an attempt at deciphering the
puzzle, i.e. an explanation of the various processes and TeX tricks.
</p>

 <p>
The original puzzle can be found at  <a href="https://www.ctan.org/pkg/xii">CTAN/xii</a>.
</p>

 <p>
Here is a copy:
</p>

 <div class="org-src-container">
 <pre class="src src-tex">\let~\catcode~`76~`A13~`F1~`j00~`P2jdefA71F~`7113jdefPALLF
PA''FwPA;;FPAZZFLaLPA//71F71iPAHHFLPAzzFenPASSFthP;A$$FevP
A@@FfPARR717273F737271P;ADDFRgniPAWW71FPATTFvePA**FstRsamP
AGGFRruoPAqq71.72.F717271PAYY7172F727171PA??Fi*LmPA&&71jfi
Fjfi71PAVVFjbigskipRPWGAUU71727374 75,76Fjpar71727375Djifx
:76jelse&U76jfiPLAKK7172F71l7271PAXX71FVLnOSeL71SLRyadR@oL
RrhC?yLRurtKFeLPFovPgaTLtReRomL;PABB71 72,73:Fjif.73.jelse
B73:jfiXF71PU71 72,73:PWs;AMM71F71diPAJJFRdriPAQQFRsreLPAI
I71Fo71dPA!!FRgiePBt'el@ lTLqdrYmu.Q.,Ke;vz vzLqpip.Q.,tz;
;Lql.IrsZ.eap,qn.i. i.eLlMaesLdRcna,;!;h htLqm.MRasZ.ilk,%
s$;z zLqs'.ansZ.Ymi,/sx ;LYegseZRyal,@i;@ TLRlogdLrDsW,@;G
LcYlaDLbJsW,SWXJW ree @rzchLhzsW,;WERcesInW qt.'oL.Rtrul;e
doTsW,Wk;Rri@stW aHAHHFndZPpqar.tridgeLinZpe.LtYer.W,:jbye
</pre>
</div>

 <div id="outline-container-org3a56e86" class="outline-2">
 <h2 id="org3a56e86">Catcodes</h2>
 <div class="outline-text-2" id="text-org3a56e86">
 <p>
The first step is to understand the TeX  <i>catcodes</i>.  It stands for  <i>category
codes</i>, i.e. the semantic of the various ASCII characters.
</p>

 <ul class="org-ul"> <li>0: Escape character (default  <code>\</code>)</li>
 <li>1: Beginning of group (default  <code>{</code>)</li>
 <li>2: End of group (default  <code>}</code>)</li>
 <li>3: Math shift (default  <code>$</code>)</li>
 <li>4: Alignment tab (default  <code>&</code>)</li>
 <li>5: End of line (default  <code>^^M</code> ≡ ASCII return)</li>
 <li>6: Macro parameter (default  <code>#</code>)</li>
 <li>7: Superscript (default  <code>^</code> and  <code>^^K</code>)</li>
 <li>8: Subscript (default  <code>_</code> and  <code>^^A</code>)</li>
 <li>9: Ignored character (default  <code>^^@</code> ≡ ASCII null)</li>
 <li>10: Space (default  <code>^^I</code> ≡ ASCII horizontal tab)</li>
 <li>11: Letter (default  <code>[A-Za-z]</code>)</li>
 <li>12: Other character (everything not listed above or below)</li>
 <li>13: Active character (default  <code>~</code> and  <code>^^L</code> ≡ ASCII form feed)</li>
 <li>14: Comment character (default  <code>%</code>)</li>
 <li>15: Invalid character (default  <code>^^?</code> ≡ ASCII delete)</li>
</ul> <p>
The first line
</p>

 <div class="org-src-container">
 <pre class="src src-tex">\let~\catcode~`76~`A13~`F1~`j00~`P2
</pre>
</div>

 <p>
applies the following catcodes:
</p>

 <ul class="org-ul"> <li> <code>~</code> =  <code>\catcode</code></li>
 <li> <code>j</code> = “\ ” (backslash + space)</li>
 <li> <code>7</code> =  <code>#</code></li>
 <li> <code>A</code> = active character</li>
 <li> <code>F</code> =  <code>{</code></li>
 <li> <code>P</code> =  <code>}</code></li>
</ul></div>
</div>

 <div id="outline-container-orgbc53a25" class="outline-2">
 <h2 id="orgbc53a25">Command defining commands</h2>
 <div class="outline-text-2" id="text-orgbc53a25">
 <p>
Next we have
</p>

 <div class="org-src-container">
 <pre class="src src-tex">jdefA71F~`7113jdefP
</pre>
</div>

 <p>
which, in proper TeX, would be
</p>

 <div class="org-src-container">
 <pre class="src src-tex">\def A #1{\catcode `#1=13 \def}
</pre>
</div>

 <p>
From then on,  <code>A</code> will turn the first next character to an active character and
define the second next character to what follows.
</p>

 <p>
Example with the first application of  <code>A</code>:
</p>

 <div class="org-src-container">
 <pre class="src src-tex">ALLF
P
</pre>
</div>

 <p>
(The linefeed matters.)  It gets expanded to
</p>

 <div class="org-src-container">
 <pre class="src src-tex">\catcode `L=13 \def L {
}
</pre>
</div>

 <p>
So  <code>L</code> is now a space.
</p>

 <p>
The same process gets repeated throughout the following lines:
</p>

 <div class="org-src-container">
 <pre class="src src-tex">A''FwPA;;FPAZZFLaLPA//71F71iPAHHFLPAzzFenPASSFthP;A$$FevP
A@@FfPARR717273F737271P;ADDFRgniPAWW71FPATTFvePA**FstRsamP
AGGFRruoPAqq71.72.F717271PAYY7172F727171PA??Fi*LmPA&&71jfi
Fjfi71PAVVFjbigskipRPWGAUU71727374 75,76Fjpar71727375Djifx
:76jelse&U76jfiPLAKK7172F71l7271PAXX71FVLnOSeL71SLRyadR@oL
RrhC?yLRurtKFeLPFovPgaTLtReRomL;PABB71 72,73:Fjif.73.jelse
B73:jfiXF71PU71 72,73:PWs;AMM71F71diPAJJFRdriPAQQFRsreLPAI
I71Fo71dPA!!FRgieP
</pre>
</div>

 <p>
To sum up:
</p>

 <ul class="org-ul"> <li> <code>L</code>:  <code>{ }</code> ( <i>Space</i>)</li>
 <li> <code>'</code>:  <code>{w}</code></li>
 <li> <code>;</code>:  <code>{}</code> ( <i>Nothing, useful to avoid globing</i>)</li>
 <li> <code>Z</code>:  <code>{ a }</code></li>
 <li> <code>/</code>:  <code>#1{#1i}</code></li>
 <li> <code>H</code>:  <code>{ }</code> ( <i>Space, used for last sentence shift from “a” to “and a”.</i>)</li>
 <li> <code>z</code>:  <code>{en}</code></li>
 <li> <code>S</code>:  <code>{th}</code></li>
 <li> <code>$</code>:  <code>{ev}</code></li>

 <li> <code>@</code>:  <code>{f}</code></li>
 <li> <code>R</code>:  <code>#1#2#3{#3#2#1}</code></li>

 <li> <code>D</code>:  <code>{ing}</code> ( <i>Note: Rgni = ing</i>)</li>
 <li> <code>W</code>:  <code>#1{}</code> ( <i>Globing</i>)</li>
 <li> <code>T</code>:  <code>{ve}</code></li>
 <li> <code>*</code>:  <code>{stmas}</code></li>
 <li> <code>G</code>:  <code>{our}</code></li>

 <li> <code>q</code>:  <code>#1.#2.{#1#2#1}</code></li>
 <li> <code>Y</code>:  <code>#1#2{#2#1#1}</code></li>

 <li> <code>?</code>:  <code>{istmas m}</code></li>
 <li> <code>&</code>:  <code>#1\fi{\fi#1}</code> ( <i>Key command</i>)</li>
 <li> <code>V</code>:  <code>{\bigskip R}</code></li>
 <li> <code>W</code>:  <code>G</code> ( <i>Useless command</i>)</li>

 <li> <p>
 <code>U</code>:
</p>
 <div class="org-src-container">
 <pre class="src src-tex">#1#2#3#4 #5,#6{
\par
#1#2#3#5ing \ifx:#6 \else &U#6\fi}
</pre>
</div>
 <p>
( <i>Key command</i>)
</p></li>

 <li> <code>L</code>: ( <i>Useless command</i>)</li>
 <li> <code>K</code>:  <code>#1#2{#1l#2#1}</code></li>

 <li> <code>X</code>:  <code>#1{\bigskip On the #1th day of Christmas my true love gave to me}</code> ( <i>Key
command</i>)</li>

 <li> <code>B</code>:  <code>#1 #2,#3:{\if.#3.\else B #3:\fi X{#1} U#1 #2,#3:}</code> ( <i>Key command</i>)</li>

 <li> <code>W</code>:  <code>s;</code> ( <i>Useless command</i>)</li>

 <li> <code>M</code>:  <code>#1 {#1di}</code></li>

 <li> <code>J</code>:  <code>{ird}</code></li>
 <li> <code>Q</code>:  <code>{ers}</code></li>
 <li> <code>I</code>:  <code>#1{o#1d}</code></li>
 <li> <code>!</code>:  <code>{eig}</code></li>
</ul></div>
</div>

 <div id="outline-container-org0702cb2" class="outline-2">
 <h2 id="org0702cb2">Core text</h2>
 <div class="outline-text-2" id="text-org0702cb2">
 <p>
The above definitions did not produce any text, they merely served for laying
down the foundations of the obfuscation.
</p>

 <p>
The remaining text will generate the song:
</p>

 <div class="org-src-container">
 <pre class="src src-tex">Bt'el@ lTLqdrYmu.Q.,Ke;vz vzLqpip.Q.,tz;
;Lql.IrsZ.eap,qn.i. i.eLlMaesLdRcna,;!;h htLqm.MRasZ.ilk,%
s$;z zLqs'.ansZ.Ymi,/sx ;LYegseZRyal,@i;@ TLRlogdLrDsW,@;G
LcYlaDLbJsW,SWXJW ree @rzchLhzsW,;WERcesInW qt.'oL.Rtrul;e
doTsW,Wk;Rri@stW aHAHHFndZPpqar.tridgeLinZpe.LtYer.W,:jbye
</pre>
</div>
</div>
</div>

 <div id="outline-container-org2ea092c" class="outline-2">
 <h2 id="org2ea092c">Generative commands</h2>
 <div class="outline-text-2" id="text-org2ea092c">
 <p>
The fundamental idea behind the text generation is that one command will loop
over a list of sentences and run another command over each sentence.
</p>

 <p>
The loop command is  <code>B</code>.  It recurses over the argument list using the  <code>,</code>
separator.
</p>

 <p>
The sentence building command is  <code>X</code>.
</p>

 <p>
There is one last trick: the  <code>U</code> command is used to propagate itself recursively
on the #6 argument.  Since there is no delimiter for #6, only one character is
passed to  <code>U</code>.  The use of the  <code>&</code> command shifts expands into another  <code>U</code> called
right after itself.  Thus the rest of the #3 argument from  <code>B</code> is successively
passed to  <code>U</code> .
</p>
</div>
</div>

 <div id="outline-container-org81443a8" class="outline-2">
 <h2 id="org81443a8">Readable version</h2>
 <div class="outline-text-2" id="text-org81443a8">
 <p>
This version uses the same algorithm with human readable names.
</p>

 <div class="org-src-container">
 <pre class="src src-tex">% This is used to define active characters.
\catcode`@13
\def@#1{\catcode`#113\def}

% Nothing, useful to prevent globing.
@;;{}

% Space, used for last sentence shift from "a" to "and a".
@HH{\ }

% Character globing; used to glob extra commas, "ing" in some verses and "th"
% in ordinal numbers.
@WW#1{}

% Note that '#1' is everything from '&' to '\fi'. In our case, it is 'U#6'.
@&&#1\fi{\fi#1}

@UU#1#2#3#4 #5,#6{\par#1#2#3#5{ing}\if:#6\else &U#6\fi}

\def\day#1{\bigskip On the #1{th} day of Christmas my true love gave to me}

\def\gen#1 #2,#3:{\if.#3.\else \gen#3:\fi\day{#1}U#1 #2,#3:}

% Note that comments at the end of the lines are mandatory.
\gen
twelf lve drummers drumm,%
eleven ven pipers pip,%
ten ; lords a leap,%
nin e ladies danc,%
eigh ht maids a milk,%
seven en swans a swimm,%
six ; geese a lay,%
;fif ve gold ringsW,%
four r calling birdsW,%
;th{ird}W ree french hensW,%
;;;secondW two turtle dovesW,%
;;;firstW aH@HH{nd a }partridge in a pear tree.W,:

\bye
</pre>
</div>
</div>
</div>

 <div id="outline-container-org03755d5" class="outline-2">
 <h2 id="org03755d5">Simple version</h2>
 <div class="outline-text-2" id="text-org03755d5">
 <p>
This version uses an idea similar to the original, but without all the catcode
intricacies.
</p>

 <div class="org-src-container">
 <pre class="src src-tex">\def\endverse{}

\def\verse#1 #2,#3:{\if.#3.\par #2{}\else\par#2\verse#3:\fi}

\def\day#1{\bigskip On the #1 day of Christmas my true love gave to me}

\def\gen#1 #2,#3:{\if.#3.\else \gen#3:\fi\day{#1}\verse#1 #2,#3:}

\gen
twelfth twelve drummers drumming,%
eleven eleven pipers piping,%
tenth ten lords a leaping,%
ninth nine ladies dancing,%
eighth eight maids a milk,%
seventh seven swans a swimm,%
sixth six geese a lay,%
fifth five gold rings,%
fourth fourr calling birds,%
third three french hens,%
second two turtle doves,%
first \endverse\def\endverse{and }a partridge in a pear tree.,:

\bye
</pre>
</div>
</div>
</div>

 <div id="outline-container-org10d409f" class="outline-2">
 <h2 id="org10d409f">References</h2>
 <div class="outline-text-2" id="text-org10d409f">
 <ul class="org-ul"> <li> <a href="http://www.ctan.org/pkg/texbook">The TeXbook</a>, Donald E. Knuth</li>
 <li> <a href="http://www.eijkhout.net/texbytopic/texbytopic.html">TeX by Topic</a>, Victor Eijkhout</li>
 <li> <a href="http://www.ctan.org/tex-archive/info/impatient/">TeX for the Impatient</a>, Paul Abra­hams, Kathryn Har­g­reaves, Karl Berry</li>
</ul></div>
</div>
</div>